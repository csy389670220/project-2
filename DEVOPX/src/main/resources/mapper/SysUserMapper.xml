<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.push.mapper.SysUserMapper" >
  <resultMap id="BaseResultMap" type="com.example.push.model.SysUser" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="LOGIN_NAME" property="loginName" jdbcType="VARCHAR" />
    <result column="CHINA_NAME" property="chinaName" jdbcType="VARCHAR" />
    <result column="PASSWORD" property="password" jdbcType="VARCHAR" />
    <result column="ROLES" property="roles" jdbcType="VARCHAR" />
    <result column="SYS_TOKEN" property="sysToken" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, LOGIN_NAME, CHINA_NAME, PASSWORD, ROLES,SYS_TOKEN, STATUS, CREATE_TIME, UPDATE_TIME, CREATE_USER,
    UPDATE_USER
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from sys_user
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from sys_user
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.push.model.SysUser" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user (LOGIN_NAME, CHINA_NAME, PASSWORD,
    ROLES, SYS_TOKEN,STATUS, CREATE_TIME,
    UPDATE_TIME, CREATE_USER, UPDATE_USER
    )
    values (#{loginName,jdbcType=VARCHAR}, #{chinaName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{roles,jdbcType=VARCHAR}, #{sysToken,jdbcType=VARCHAR}, #{status,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
    #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER}
    )
  </insert>
  <insert id="insertSelective" parameterType="com.example.push.model.SysUser" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into sys_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="loginName != null" >
        LOGIN_NAME,
      </if>
      <if test="chinaName != null" >
        CHINA_NAME,
      </if>
      <if test="password != null" >
        PASSWORD,
      </if>
      <if test="roles != null" >
        ROLES,
      </if>
      <if test="sysToken != null" >
        SYS_TOKEN,
      </if>
      <if test="status != null" >
        STATUS,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="updateUser != null" >
        UPDATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="loginName != null" >
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="chinaName != null" >
        #{chinaName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="roles != null" >
        #{roles,jdbcType=VARCHAR},
      </if>
      <if test="sysToken != null" >
        #{sysToken,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.push.model.SysUser" >
    update sys_user
    <set >
      <if test="loginName != null" >
        LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="chinaName != null" >
        CHINA_NAME = #{chinaName,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        PASSWORD = #{password,jdbcType=VARCHAR},
      </if>
      <if test="roles != null" >
        ROLES = #{roles,jdbcType=VARCHAR},
      </if>
      <if test="sysToken != null" >
        SYS_TOKEN = #{sysToken,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        STATUS = #{status,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.push.model.SysUser" >
    update sys_user
    set LOGIN_NAME = #{loginName,jdbcType=VARCHAR},
      CHINA_NAME = #{chinaName,jdbcType=VARCHAR},
      PASSWORD = #{password,jdbcType=VARCHAR},
      ROLES = #{roles,jdbcType=VARCHAR},
      SYS_TOKEN = #{sysToken,jdbcType=VARCHAR},
      STATUS = #{status,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      UPDATE_USER = #{updateUser,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="selectByLoginName" resultMap="BaseResultMap" parameterType="String">
    select
    <include refid="Base_Column_List"/>
    from sys_user
    where LOGIN_NAME = #{loginName,jdbcType=VARCHAR}
  </select>

  <select id="selectRolesByLoginName" resultType="String" parameterType="String">
    select
    ROLES
    from sys_user
    where LOGIN_NAME = #{loginName,jdbcType=VARCHAR}
  </select>

  <select id="selectUserByToken" resultMap="BaseResultMap" parameterType="String" >
    select
    ID
    from sys_user
    where SYS_TOKEN = #{sysToken,jdbcType=VARCHAR}
  </select>
</mapper>