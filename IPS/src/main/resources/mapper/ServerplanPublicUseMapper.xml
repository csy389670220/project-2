<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.ips.mapper.ServerplanPublicUseMapper" >
  <resultMap id="BaseResultMap" type="com.example.ips.model.ServerplanPublicUse" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="SERVER" property="server" jdbcType="VARCHAR" />
    <result column="APPLICATION" property="application" jdbcType="VARCHAR" />
    <result column="MEMO" property="memo" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, SERVER, APPLICATION, MEMO, CREATE_TIME, UPDATE_TIME, CREATE_USER, UPDATE_USER
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from serverplan_publicuse
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from serverplan_publicuse
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.ips.model.ServerplanPublicUse" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into serverplan_publicuse (SERVER, APPLICATION, MEMO,
      CREATE_TIME, UPDATE_TIME, CREATE_USER, 
      UPDATE_USER)
    values (#{server,jdbcType=VARCHAR}, #{application,jdbcType=VARCHAR}, #{memo,jdbcType=VARCHAR},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=INTEGER}, 
      #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.ips.model.ServerplanPublicUse" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into serverplan_publicuse
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="server != null" >
        SERVER,
      </if>
      <if test="application != null" >
        APPLICATION,
      </if>
      <if test="memo != null" >
        MEMO,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="updateUser != null" >
        UPDATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="server != null" >
        #{server,jdbcType=VARCHAR},
      </if>
      <if test="application != null" >
        #{application,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.ips.model.ServerplanPublicUse" >
    update serverplan_publicuse
    <set >
      <if test="server != null" >
        SERVER = #{server,jdbcType=VARCHAR},
      </if>
      <if test="application != null" >
        APPLICATION = #{application,jdbcType=VARCHAR},
      </if>
      <if test="memo != null" >
        MEMO = #{memo,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.ips.model.ServerplanPublicUse" >
    update serverplan_publicuse
    set SERVER = #{server,jdbcType=VARCHAR},
      APPLICATION = #{application,jdbcType=VARCHAR},
      MEMO = #{memo,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      UPDATE_USER = #{updateUser,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="getAllPublicUse" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from serverplan_publicuse
  </select>

</mapper>