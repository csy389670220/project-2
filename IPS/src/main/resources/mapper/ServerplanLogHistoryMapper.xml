<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.ips.mapper.ServerplanLogHistoryMapper" >
  <resultMap id="BaseResultMap" type="com.example.ips.model.ServerplanLogHistory" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="VERSION" property="version" jdbcType="VARCHAR" />
    <result column="TIME" property="time" jdbcType="VARCHAR" />
    <result column="UPDATER" property="updater" jdbcType="VARCHAR" />
    <result column="CONTENT" property="content" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CREATE_USER" property="createUser" jdbcType="INTEGER" />
    <result column="UPDATE_USER" property="updateUser" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    ID, VERSION, TIME, UPDATER, CONTENT, CREATE_TIME, UPDATE_TIME, CREATE_USER, UPDATE_USER
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from serverplan_loghistory
    where ID = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from serverplan_loghistory
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.example.ips.model.ServerplanLogHistory" >
    insert into serverplan_loghistory (VERSION, TIME, UPDATER,
      CONTENT, CREATE_TIME, UPDATE_TIME, 
      CREATE_USER, UPDATE_USER)
    values (#{version,jdbcType=VARCHAR}, #{time,jdbcType=VARCHAR}, #{updater,jdbcType=VARCHAR}, 
      #{content,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{createUser,jdbcType=INTEGER}, #{updateUser,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.example.ips.model.ServerplanLogHistory" >
    insert into serverplan_loghistory
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="version != null" >
        VERSION,
      </if>
      <if test="time != null" >
        TIME,
      </if>
      <if test="updater != null" >
        UPDATER,
      </if>
      <if test="content != null" >
        CONTENT,
      </if>
      <if test="createTime != null" >
        CREATE_TIME,
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME,
      </if>
      <if test="createUser != null" >
        CREATE_USER,
      </if>
      <if test="updateUser != null" >
        UPDATE_USER,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="version != null" >
        #{version,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        #{time,jdbcType=VARCHAR},
      </if>
      <if test="updater != null" >
        #{updater,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.ips.model.ServerplanLogHistory" >
    update serverplan_loghistory
    <set >
      <if test="version != null" >
        VERSION = #{version,jdbcType=VARCHAR},
      </if>
      <if test="time != null" >
        TIME = #{time,jdbcType=VARCHAR},
      </if>
      <if test="updater != null" >
        UPDATER = #{updater,jdbcType=VARCHAR},
      </if>
      <if test="content != null" >
        CONTENT = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUser != null" >
        CREATE_USER = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="updateUser != null" >
        UPDATE_USER = #{updateUser,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.ips.model.ServerplanLogHistory" >
    update serverplan_loghistory
    set VERSION = #{version,jdbcType=VARCHAR},
      TIME = #{time,jdbcType=VARCHAR},
      UPDATER = #{updater,jdbcType=VARCHAR},
      CONTENT = #{content,jdbcType=VARCHAR},
      CREATE_TIME = #{createTime,jdbcType=TIMESTAMP},
      UPDATE_TIME = #{updateTime,jdbcType=TIMESTAMP},
      CREATE_USER = #{createUser,jdbcType=INTEGER},
      UPDATE_USER = #{updateUser,jdbcType=INTEGER}
    where ID = #{id,jdbcType=INTEGER}
  </update>

  <select id="getAllLogHistory" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from serverplan_loghistory
  </select>
</mapper>